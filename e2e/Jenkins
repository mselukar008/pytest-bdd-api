
systemctl start jenkins
systemctl enable jenkins

sudo service start jenkins
sudo systemctl status jenkins.service

config - 
sudo vi /etc/init.d/jenkins

Jenkins Config - cat /etc/sysconfig/jenkins

Jenkins home - /var/lib/jenkins

************To restart jenkins service - systemctl restart jenkins*******************

check port 8080 is receving anything
-netstat -ntlup|grep 8080

systemctl status jenkins.service

pipeline defination - 

/************************************************
    AUTHOR: SANTOSH HADAWALE
************************************************/
node('master') {
    stage('Clean Workspace'){
        currentBuild.displayName = "#${BUILD_NUMBER}: "+ env.Environment
        deleteDir()
    }
    stage('Checkout'){
        git branch: env.Branch, credentialsId: '1c5f242f-d0cf-4980-9f09-3b7acffb730c', poll: false, url: 'git@git.persistent.co.in:IBM_CBS/documents.git'
    }
    try{
        stage('UI Test Execution'){
            sh 'npm install'
            sh 'protractor orderIntegrationConf.js'
        }
    }catch(Exception e){
        println 'UI Test Execution stage failed.'
        currentBuild.result = "FAILURE"
    }finally{
        stage('Publish Results'){
            junit allowEmptyResults: true, testDataPublishers: [[$class: 'AttachmentPublisher']], testResults: 'testreports/junitresults.xml'
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'screenshotreports', reportFiles: 'test-report.html	', reportName: 'HTML Report', reportTitles: ''])
            archive 'application.log,testreports/screenshots/*.png'
        }
        stage('Send Email Notification'){
            emailext (
                mimeType: 'text/html',
				subject: "[Jenkins]: ${env.JOB_NAME} #${env.BUILD_NUMBER} - "+currentBuild.currentResult,
				body: '''${JELLY_SCRIPT,template="Custom_IDC_Pipeline.jelly"}''', 
			//	to: 'mahendra_selukar@persistent.com',
				attachLog: false,
				attachmentsPattern: '**/chrome-test-report.html,application.log'
			)
        }
    }
}

imiComputeEngine,imiPersistentDisk,imiEC2,imiLambda,imiS3,imiVpc,imiSqs,imirds,imiMemCache,imiCloudFrontRtmpDistribution,imiElastciCacheRedis,imiGlacier,imiApplicationlb,imiNetworklb,imiClasiclb,imiKms,IMIAzureApplicationSecurityGroup,IMIAzureAvailabilitySet,IMIAzureBatchAccount,IMIAzureLoadBalancer,IMIAzureVirtualNetwork,IMIAzureKeyVault,IMIAzureRelay,IMIAzureContainerRegistry,IMIAzureCosmosDB,IMIAzureNotificationHub,IMIAzureLinuxVM,IMIAzureWindowsVM
dynamoDBAWS,efsAWS,rdsAWS,s3AWS,snsAWS,sqsAWS,ebsAWS,route53RecordSetAWS,route53HostedZoneAWS,route53HealthCheckAWS,applicationELBAWS,networkELBAWS,cloudWatchLogsAWS,cloudFrontWebAWS,cloudFrontRTMPAWS,cloudTrailAWS,lambdaAWS,configAWS,elasticSearchAWS,elasticacheRedisAWS,elasticacheSubnetAWS,elasticacheMemcachedAWS,glacierAWS,redshiftParamGroupAWS,redshiftSubnetGroupAWS,networkSecurityGroupAWS,kinesisDataFireHoseAWS,classicELBAWS,ec2NetworkInterfaceAWS,cloudWatchAlarmsAWS,dataPipelineAWS,redshiftAWS,rdsEventSubscription,rdsDBOptionGroup,rdsDBParameterGroup,rdsDBSubnetGroup,elasticContainerService,elasticContainerRegistry,vpcAWS,ec2AWS,reservedInstanceAWS,shoppingCartAws,keyPair,lambdaLayerVersion,kmsAWS,budgetOrderServiceAws,AwsBudgetMultiUser,awsPolicy,timeConsumingServices,pricingOfCustomTemplate,imiSetU


=====================================================

Generating ssk key for jenkins credentials - 

Generate new ssh key as per user - https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

Add to github - https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account

Add to Jenkins - https://mohitgoyal.co/2017/02/27/configuring-ssh-authentication-between-github-and-jenkins/


<workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}</workspaceDir>
==============================================================================

Backup and Restore - 
-switch to /var/lib/jenkins folder and remove all folders and file
-copy and paster the back up folder here
-run cat /etc/passwd file to check user who is running jenkins
-Assign required permission to user using chown -R user /var/lib/jenkins/
-Restart jenkins.



-passphrase- uiauto

